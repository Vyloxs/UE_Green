WeakHashMap2.main;java.util.WeakHashMap.put;java.util.WeakHashMap.resize;java.util.WeakHashMap.transfer,0.0000
WeakHashMap2.main;java.lang.invoke.Invokers$Holder.linkToTargetMethod;java.lang.invoke.LambdaForm$MH/0x00007f2c8800c800.invoke;java.lang.invoke.LambdaForm$MH/0x00007f2c8800b800.invoke;java.lang.invoke.DirectMethodHandle$Holder.invokeStatic;java.lang.StringConcatHelper.prepend;java.lang.StringConcatHelper.prepend;java.lang.Integer.getChars,0.0000
WeakHashMap2.main;java.util.WeakHashMap$HashIterator.hasNext,0.0000
WeakHashMap2.main;java.util.WeakHashMap.put;java.util.WeakHashMap.getTable;java.util.WeakHashMap.expungeStaleEntries;java.lang.ref.ReferenceQueue.poll;java.util.concurrent.locks.ReentrantLock.lock;java.util.concurrent.locks.ReentrantLock$Sync.lock;java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire;java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire;java.util.concurrent.locks.LockSupport.park;jdk.internal.misc.Unsafe.park,0.0000
WeakHashMap2.main;java.lang.invoke.Invokers$Holder.linkToTargetMethod;java.lang.invoke.LambdaForm$MH/0x00007f2c8800c800.invoke;java.lang.invoke.DirectMethodHandle$Holder.invokeStatic;java.lang.StringConcatHelper.newArray;jdk.internal.misc.Unsafe.allocateUninitializedArray,0.0000
WeakHashMap2.main;java.lang.Integer.valueOf,0.0000
WeakHashMap2.main;java.util.WeakHashMap.put;java.util.WeakHashMap.getTable;java.util.WeakHashMap.expungeStaleEntries;java.lang.ref.ReferenceQueue.poll;java.util.concurrent.locks.ReentrantLock.unlock;java.util.concurrent.locks.AbstractQueuedSynchronizer.release;java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext;java.util.concurrent.locks.LockSupport.unpark;jdk.internal.misc.Unsafe.unpark,0.0000
WeakHashMap2.main;java.util.WeakHashMap.put;java.util.WeakHashMap.getTable;java.util.WeakHashMap.expungeStaleEntries,0.0000
WeakHashMap2.main;java.lang.invoke.Invokers$Holder.linkToTargetMethod;java.lang.invoke.LambdaForm$MH/0x00007f2c8800c800.invoke;java.lang.invoke.LambdaForm$MH/0x00007f2c8800c400.invoke;java.lang.invoke.DirectMethodHandle$Holder.invokeStatic,0.0000
WeakHashMap2.main;java.util.WeakHashMap.put;java.util.WeakHashMap.getTable;java.util.WeakHashMap.expungeStaleEntries;java.lang.ref.ReferenceQueue.poll,0.0000
WeakHashMap2.main,0.0000
WeakHashMap2.main;java.util.WeakHashMap.remove,0.0000
WeakHashMap2.main;java.util.WeakHashMap.put;java.util.WeakHashMap.getTable;java.util.WeakHashMap.expungeStaleEntries;java.lang.ref.ReferenceQueue.poll;java.util.concurrent.locks.ReentrantLock.lock;java.util.concurrent.locks.ReentrantLock$Sync.lock;java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire;java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire,0.0000
WeakHashMap2.main;java.lang.invoke.MethodHandleNatives.linkCallSite;java.lang.invoke.MethodHandleNatives.linkCallSiteImpl;java.lang.invoke.CallSite.makeSite;java.lang.invoke.BootstrapMethodInvoker.invoke;java.lang.invoke.Invokers$Holder.invokeExact_MT;java.lang.invoke.DelegatingMethodHandle$Holder.delegate;java.lang.invoke.DirectMethodHandle$Holder.invokeStatic;java.lang.invoke.StringConcatFactory.makeConcatWithConstants;java.lang.invoke.StringConcatFactory.generateMHInlineCopy;java.lang.invoke.StringConcatFactory.filterAndFoldInMixers;java.lang.invoke.StringConcatFactory.foldInLastMixers;java.lang.invoke.MethodHandles.insertArguments;java.lang.invoke.MethodHandles.insertArgumentPrimitive;java.lang.invoke.BoundMethodHandle.bindArgumentJ;java.lang.invoke.LambdaFormEditor.bindArgumentJ;java.lang.invoke.LambdaFormEditor.bindArgumentForm;java.lang.invoke.LambdaFormEditor.newSpeciesData;java.lang.invoke.BoundMethodHandle$SpeciesData.extendWith;java.lang.invoke.ClassSpecializer.findSpecies;java.lang.invoke.ClassSpecializer$Factory.loadSpecies;java.lang.invoke.ClassSpecializer$Factory.linkSpeciesDataToCode;java.lang.invoke.ClassSpecializer$Factory.findFactories;java.lang.invoke.ClassSpecializer$Factory.findFactory;java.lang.invoke.MethodHandles$Lookup.findStatic;java.lang.invoke.MethodHandles$Lookup.getDirectMethod;java.lang.invoke.MethodHandles$Lookup.getDirectMethodCommon;java.lang.invoke.DirectMethodHandle.make;java.lang.invoke.DirectMethodHandle.preparedLambdaForm;java.lang.invoke.DirectMethodHandle.preparedLambdaForm;java.lang.invoke.DirectMethodHandle.preparedLambdaForm;java.lang.invoke.DirectMethodHandle.makePreparedLambdaForm;java.lang.invoke.MemberName$Factory.resolveOrFail;java.lang.invoke.MemberName$Factory.resolve;java.lang.invoke.MethodHandleNatives.resolve,0.0000
java.lang.ref.Reference$ReferenceHandler.run;java.lang.ref.Reference.processPendingReferences;java.lang.ref.Reference.enqueueFromPending;java.lang.ref.ReferenceQueue.enqueue;java.util.concurrent.locks.ReentrantLock.lock;java.util.concurrent.locks.ReentrantLock$Sync.lock;java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire;java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire;java.util.concurrent.locks.LockSupport.park;jdk.internal.misc.Unsafe.park,0.3010
java.lang.ref.Reference$ReferenceHandler.run;java.lang.ref.Reference.processPendingReferences;java.lang.ref.Reference.enqueueFromPending,0.9030
java.lang.ref.Reference$ReferenceHandler.run;java.lang.ref.Reference.processPendingReferences;java.lang.ref.Reference.waitForReferencePendingList,27.9920
java.lang.ref.Reference$ReferenceHandler.run;java.lang.ref.Reference.processPendingReferences;java.lang.ref.Reference.enqueueFromPending;java.lang.ref.ReferenceQueue.enqueue;java.util.concurrent.locks.ReentrantLock.lock;java.util.concurrent.locks.ReentrantLock$Sync.lock;java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire;java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire,0.3010
java.lang.ref.Reference$ReferenceHandler.run;java.lang.ref.Reference.processPendingReferences;java.lang.ref.Reference.enqueueFromPending;java.lang.ref.ReferenceQueue.enqueue;java.util.concurrent.locks.ReentrantLock.lock;java.util.concurrent.locks.ReentrantLock$Sync.lock;java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock,0.3010
jdk.internal.misc.InnocuousThread.run;java.lang.Thread.run;java.lang.Thread.runWith;jdk.internal.ref.CleanerImpl.run;java.lang.ref.ReferenceQueue.remove;java.lang.ref.ReferenceQueue.remove0;java.lang.ref.ReferenceQueue.await;java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await;java.util.concurrent.locks.LockSupport.parkNanos;jdk.internal.misc.Unsafe.park,0.0000
